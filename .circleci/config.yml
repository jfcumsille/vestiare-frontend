version: 2.1
orbs:
  heroku: circleci/heroku@1.2.6

commands:
  release:
    parameters:
      application-name:
        type: string

    steps:
      - heroku/push-docker-image:
          api-key: HEROKU_API_KEY
          app-name: <<parameters.application-name>>
      - heroku/release-docker-image:
          api-key: HEROKU_API_KEY
          app-name: <<parameters.application-name>>

jobs:
  eslint:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-cache-{{ checksum "package-lock.json" }}
          - node-modules-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: node-modules-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Lint with ESLint
          command: npm run lint:eslint
  stylelint:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-cache-{{ checksum "package-lock.json" }}
          - node-modules-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: node-modules-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Lint with StyleLint
          command: npm run lint:stylelint
  build:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-cache-{{ checksum "package-lock.json" }}
          - node-modules-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: node-modules-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Build the application
          command: npm run build
  jest:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-cache-{{ checksum "package-lock.json" }}
          - node-modules-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: node-modules-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Test with Jest
          command: npm run test:jest
  no-fixup-commits:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - run:
          name: Check absence of fixup commits
          command: |
            ! git log master... | grep 'fixup!'
  staging-deploy:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-cache-{{ checksum "package-lock.json" }}
          - node-modules-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: node-modules-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - release:
          application-name: fintoc-stg-dashboard
  preview-deploy:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-cache-{{ checksum "package-lock.json" }}
          - node-modules-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: node-modules-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - release:
          application-name: fintoc-stg-dashboard
  production-deploy:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-cache-{{ checksum "package-lock.json" }}
          - node-modules-cache-
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: node-modules-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - release:
          application-name: fintoc-dashboard

workflows:
  linters:
    jobs:
      - eslint
      - stylelint
  build:
    jobs:
      - build
  tests:
    jobs:
      - jest
  tidyness:
    jobs:
      - no-fixup-commits
  preview-deploy:
    jobs:
      - preview-deploy:
          filters:
            branches:
              only:
                - chore/implement-cd
  staging-deploy:
    jobs:
      - staging-deploy:
          filters:
            branches:
              only:
                - master
  production-deploy:
    jobs:
      - production-deploy:
          filters:
            branches:
              only:
                - production
